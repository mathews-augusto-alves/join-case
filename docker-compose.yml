version: '3.8'
services:
  postgres:
    image: postgres:latest
    container_name: postgres-local
    environment:
      POSTGRES_USER: usuario
      POSTGRES_PASSWORD: senha
      POSTGRES_DB: db_teste_vendas
    ports:
      - "5432:5432"
    volumes:
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    restart: unless-stopped

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://172.17.0.1:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  service-consumer:
    build:
      context: ./service-consumer
      dockerfile: Dockerfile
    container_name: service-consumer
    ports:
      - "9093:9093"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://172.17.0.1:5432/db_teste_vendas
      SPRING_DATASOURCE_USERNAME: usuario
      SPRING_DATASOURCE_PASSWORD: senha
      SPRING_KAFKA_BOOTSTRAP-SERVERS: kafka:9092
    depends_on:
      - postgres
      - kafka
    restart: unless-stopped

  app-control:
    build:
      context: ./app-control
      dockerfile: Dockerfile
    container_name: app-control
    ports:
      - "8085:8085"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://172.17.0.1:5432/db_teste_vendas
      SPRING_DATASOURCE_USERNAME: usuario
      SPRING_DATASOURCE_PASSWORD: senha
      KAFKA_SERVER: kafka:9092
    depends_on:
      - service-consumer
    restart: unless-stopped

  nextjs-app:
    build:
      context: ./project
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: https://${CODESPACE_NAME}-8085.github.dev
    depends_on:
      - app-control
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3